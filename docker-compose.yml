version: '3'

# Главный compose файл, остальные(с суффиксами, например, docker-compose.prod.yml)
# наследуются от него и подгоняют сервисы под окружение

services:

  nginx:
    build:
      context: ./docker/nginx
    restart: always
    volumes:
      - ./frontend:/www/frontend
      - ./docker/nginx/conf:/etc/nginx
    env_file:
      - .env
    depends_on:
      - nodejs
      - php
    ports:
      - "80:80"
      - "443:443"

  php:
    build:
      context: ./docker/php
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    restart: always
    volumes:
      - ./backend:/www
      - ./frontend/config/firebase/listodo-6a00c-firebase-adminsdk-6qpds-575a893522.json:/www/config/firebase.json
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    env_file:
      - .env
    working_dir: /www
    expose:
      - 9000

#  nunit:
#    image: nginx/unit:1.16.0-minimal
#    volumes:
#      - ./frontend:/www
#      - ./docker/nginx-unit/conf:/docker-entrypoint.d/
#    ports:
#      - 82:80

  nodejs:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    volumes:
      - ./frontend:/www
    env_file:
      - .env
    working_dir: /www
    command: sh -c 'yarn install && yarn build'

  postgres:
    image: postgres:14.3-alpine3.15
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./pg-dumps:/pg-dumps
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_HOST_PORT:-8080}:8080

  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-data:/data/db
    ports:
      - ${MONGO_PORT:-27017}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_HOST_PORT:-8081}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}

volumes:
  postgres-data:
  mongo-data:
