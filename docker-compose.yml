version: '3'

services:

  nginx_frontend:
    image: nginx:1.17.8-alpine
    volumes:
      - ./frontend:/www
      - ./docker/nginx/conf:/etc/nginx
    depends_on:
      - nodejs
    ports:
      - 81:80

  nginx_backend:
    build:
      context: ./docker/backend
    volumes:
      - ./docker/backend/conf/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php
    ports:
      - 82:80

  php:
    restart: always
    build:
      context: ./docker/php
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    volumes:
      - ./backend:/www
    env_file:
      - .env
    working_dir: /www
    expose:
      - 9000

#  nunit:
#    image: nginx/unit:1.16.0-minimal
#    volumes:
#      - ./frontend:/www
#      - ./docker/nginx-unit/conf:/docker-entrypoint.d/
#    ports:
#      - 82:80

  nodejs:
    build:
      context: ./docker/node
    volumes:
      - ./frontend:/www
    working_dir: /www
    command: sh -c 'yarn install && yarn build'

  postgres:
    image: postgres:13.1
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}

volumes:
  postgres-data:
